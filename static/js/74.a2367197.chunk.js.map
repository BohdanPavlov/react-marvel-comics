{"version":3,"file":"static/js/74.a2367197.chunk.js","mappings":"yOAyCMA,EAAO,SAAH,GAAiB,IAAZC,EAAK,EAALA,MACJC,EAA6DD,EAA7DC,MAAOC,EAAsDF,EAAtDE,YAAaC,EAAyCH,EAAzCG,UAAWC,EAA8BJ,EAA9BI,UAAWC,EAAmBL,EAAnBK,SAAUC,EAASN,EAATM,MAE3D,OACI,iBAAKC,UAAU,eAAc,WACzB,gBAAKC,IAAKJ,EAAWK,IAAKR,EAAOM,UAAU,uBAC3C,iBAAKA,UAAU,qBAAoB,WAC/B,eAAIA,UAAU,qBAAoB,SAAEN,KACpC,cAAGM,UAAU,sBAAqB,SAAEL,KACpC,cAAGK,UAAU,sBAAqB,SAAEJ,KACpC,eAAGI,UAAU,sBAAqB,wBAAaF,MAC/C,gBAAKE,UAAU,sBAAqB,SAAED,QAE1C,SAAC,KAAI,CAACI,GAAG,8BAA8BH,UAAU,qBAAoB,2BAGjF,EAEA,EAlDoB,WAChB,OAA0BI,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA/BX,EAAK,KAAEY,EAAQ,KACtB,GAA+CC,EAAAA,EAAAA,KAAxCC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAC1BC,GAAMC,EAAAA,EAAAA,MAAND,IAEPE,EAAAA,EAAAA,YAAU,WACNC,EAAUH,EACd,GAAG,CAACA,IAEJ,IAAMG,EAAY,SAACH,GACfD,IACAD,EAASE,GACJI,KAAKC,EACd,EAEMA,EAAgB,SAACC,GACnBZ,EAASY,EACb,EAEMC,EAAeV,GAAQ,SAACW,EAAA,EAAY,IAAK,KACzCC,EAAUb,GAAU,SAACc,EAAA,EAAO,IAAK,KACjCC,EAAYf,GAAWC,EAAiC,MAAxB,SAAChB,EAAI,CAACC,MAAOA,IAEnD,OACI,gCACKyB,EACAE,EACAE,IAGb,C","sources":["components/pages/SingleComicPage.js"],"sourcesContent":["import {useEffect, useState} from 'react';\r\nimport {Link, useParams} from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComic = () => {\r\n    const [comic, setComic] = useState({})\r\n    const {loading, error, getComic, clearError} = useMarvelService()\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        loadComic(id)\r\n    }, [id])\r\n\r\n    const loadComic = (id) => {\r\n        clearError()\r\n        getComic(id)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (newComic) => {\r\n        setComic(newComic)\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null\r\n    const spinner = loading ? <Spinner/> : null\r\n    const content = !(loading || error) ? <View comic={comic}/> : null\r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    const {title, description, pageCount, thumbnail, language, price} = comic\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language : {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/react-marvel-comics/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComic;\r\n"],"names":["View","comic","title","description","pageCount","thumbnail","language","price","className","src","alt","to","useState","setComic","useMarvelService","loading","error","getComic","clearError","id","useParams","useEffect","loadComic","then","onComicLoaded","newComic","errorMessage","ErrorMessage","spinner","Spinner","content"],"sourceRoot":""}