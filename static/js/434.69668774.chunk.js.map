{"version":3,"file":"static/js/434.69668774.chunk.js","mappings":"+RAiBA,EAbkB,WACd,OACI,iBAAKA,UAAU,cAAa,WACxB,gBAAKC,IAAKC,EAAUC,IAAI,cACxB,iBAAKH,UAAU,mBAAkB,oCACP,kBAAK,kBAG/B,gBAAKC,IAAKG,EAAcD,IAAI,oBAGxC,E,8DCoEA,EA1EmB,WACf,OAA4BE,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAAgDF,EAAAA,EAAAA,WAAS,GAAM,eAAxDG,EAAgB,KAAEC,EAAmB,KAC5C,GAA4BJ,EAAAA,EAAAA,UAAS,GAAE,eAAhCK,EAAM,KAAEC,EAAS,KACxB,GAAsCN,EAAAA,EAAAA,WAAS,GAAM,eAA9CO,EAAW,KAAEC,EAAc,KAElC,GAAuCC,EAAAA,EAAAA,KAAhCC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAY,EAAZA,cAEvBC,EAAAA,EAAAA,YAAU,WACNC,EAAUT,GAAQ,EACtB,GAAG,IAEH,IAAMS,EAAY,SAACT,EAAQU,GACbX,GAAVW,GAEAH,EAAaP,GACRW,KAAKC,EACd,EAEMA,EAAiB,SAACC,GACpB,IAAIC,GAAQ,EACRD,EAAUE,OAAS,IACnBD,GAAQ,GAGZjB,GAAU,SAAAD,GAAM,wBAAQA,IAAM,OAAKiB,GAAS,IAC5Cd,GAAoB,GACpBE,GAAU,SAAAD,GAAM,OAAIA,EAAS,CAAC,IAC9BG,EAAeW,EACnB,EAsBME,EApBc,SAACpB,GACjB,IAAMqB,EAAQrB,EAAOsB,KAAI,SAACC,EAAOC,GAC7B,OACI,eAAI9B,UAAU,eAAc,UACxB,UAAC,KAAI,CAAC+B,GAAE,sCAAiCF,EAAMG,IAAK,WAChD,gBAAK/B,IAAK4B,EAAMI,UAAW9B,IAAK0B,EAAMK,MAAOlC,UAAU,sBACvD,gBAAKA,UAAU,oBAAmB,SAAE6B,EAAMK,SAC1C,gBAAKlC,UAAU,qBAAoB,SAAE6B,EAAMM,YAJjBL,EAQ1C,IAEA,OACI,eAAI9B,UAAU,eAAc,SACvB2B,GAGb,CAEgBS,CAAY9B,GAEtB+B,EAAerB,GAAQ,SAACsB,EAAA,EAAY,IAAK,KACzCC,EAAUxB,IAAYP,GAAmB,SAACgC,EAAA,EAAO,IAAK,KACtDC,EAAe1B,EAAU,CAAC2B,QAAS,OAAQC,eAAgB,SAAUC,cAAe,UAAY,KAEtG,OACI,iBAAK5C,UAAU,eAAe6C,MAAOJ,EAAa,UAC7CJ,EACAE,EACAb,GACD,mBACI1B,UAAU,mCACV8C,SAAUtC,EACVqC,MAAO,CAAC,QAAWjC,EAAc,OAAS,SAC1CmC,QAAS,kBAAM5B,EAAUT,EAAO,EAAC,UAEjC,gBAAKV,UAAU,QAAO,2BAItC,ECrEA,EATmB,WACf,OACI,iCACI,SAAC,EAAS,KACV,SAAC,EAAU,MAGvB,C","sources":["components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    const [comics, setComics] = useState([])\n    const [newComicsLoading, setNewComicsLoading] = useState(false)\n    const [offset, setOffset] = useState(0)\n    const [comicsEnded, setComicsEnded] = useState(false)\n\n    const {loading, error, getAllComics} = useMarvelService()\n\n    useEffect(() => {\n        getComics(offset, true)\n    }, [])\n\n    const getComics = (offset, initial) => {\n        initial ? setNewComicsLoading(false) : setNewComicsLoading(true)\n\n        getAllComics(offset)\n            .then(onComicsLoaded)\n    }\n\n    const onComicsLoaded = (newComics) => {\n        let ended = false\n        if (newComics.length < 8) {\n            ended = true\n        }\n\n        setComics(comics => [...comics, ...newComics])\n        setNewComicsLoading(false)\n        setOffset(offset => offset + 8)\n        setComicsEnded(ended)\n    }\n\n    const renderItems = (comics) => {\n        const items = comics.map((comic, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/react-marvel-comics/comics/${comic.id}`}>\n                        <img src={comic.thumbnail} alt={comic.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{comic.title}</div>\n                        <div className=\"comics__item-price\">{comic.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const content = renderItems(comics)\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newComicsLoading ? <Spinner/> : null;\n    const loadingStyle = loading ? {display: 'flex', justifyContent: 'center', flexDirection: 'column'} : null\n\n    return (\n        <div className='comics__list' style={loadingStyle}>\n            {errorMessage}\n            {spinner}\n            {content}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newComicsLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => getComics(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;\n","import AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"names":["className","src","avengers","alt","avengersLogo","useState","comics","setComics","newComicsLoading","setNewComicsLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","getComics","initial","then","onComicsLoaded","newComics","ended","length","content","items","map","comic","i","to","id","thumbnail","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","loadingStyle","display","justifyContent","flexDirection","style","disabled","onClick"],"sourceRoot":""}